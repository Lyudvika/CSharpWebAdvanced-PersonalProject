@model IEnumerable<ElementViewModel>

@{
    ViewBag.Title = "THE PERIODIC TABLE";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Periodic Table</title>
    <link rel="stylesheet" href="style.css">
</head>

<body>
    <table>
        <tr style="background-color: white;">
            <th colspan="18">
                <h1>@ViewBag.Title</h1>
            </th>
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => e.Id >= 1 && e.Id <= 2))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>

                @if (element.Id == 1)
                {
                    <td class ="empty" colspan="16" style="empty-cells: hide;"></td>
                }
            }
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => e.Id >= 3 && e.Id <= 10))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;">
                        <b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>

                @if (element.Id == 4)
                {
                    <td colspan="10" style="empty-cells: hide;"></td>
                }
            }
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => e.Id >= 11 && e.Id <= 18))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>

                @if (element.Id == 12)
                {
                    <td colspan="10" style="empty-cells: hide;"></td>
                }

            }
        </tr>
        
        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => e.Id >= 19 && e.Id <= 36))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>
            }
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => e.Id >= 37 && e.Id <= 54))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>
            }
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => (e.Id >= 55 && e.Id <= 56) || (e.Id >= 72 && e.Id <= 86)))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>

                @if (element.Id == 56)
                {
                    <td colspan="1" style="empty-cells: hide;"></td>
                }
            }
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => (e.Id >= 87 && e.Id <= 88) || (e.Id >= 104 && e.Id <= 118)))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>

                @if (element.Id == 88)
                {
                    <td colspan="1" style="empty-cells: hide;"></td>
                }
            }
        </tr>


        <tr style="font-size: large;">
        <td rowspan="2" colspan="3" style="empty-cells: hide;"></td>
            @foreach (var element in Model.Where(e => e.Id >= 57 && e.Id <= 71))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span><br>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>
            }
        </tr>

        <tr style="font-size: large;">
            @foreach (var element in Model.Where(e => e.Id >= 89 && e.Id <= 103))
            {
                <td class="cell" onclick="location.href='@Url.Action("ElementDetails", "PeriodicTable", new { atomicNumber = element.Id })';" style="cursor: pointer; @(GetElementColorStyle(element.ChemicalGroupBlockId))">
                    <span style="font-size: 10px;">@element.Id</span>
                    <abbr style="font-size: 15px; text-align: center; display: block; margin: auto;"><b>@element.Symbol</b></abbr>
                    <div class="etext">@element.Name</div>
                </td>
            }
        </tr>
    </table>
</body>
</html>

<style>
    body {
        font-family: sans-serif;
    }

    h1 {
        font-size: 40px;
        margin: auto;
        text-align: center;
    }

    td {
       
        width: 80px;
    }

    .etext{
        font-size: 10px;
        text-align: center;
    }

    .cell {
        border: 5px solid white;
        color: #000000;
    }
</style>

@functions {
    string GetElementColorStyle(int categoryId)
    {
        switch (categoryId)
        {
            case 1:
                return "background-color: #FFFFBB;";
            case 2:
                return "background-color: #FFC7C7;";
            case 3:
                return "background-color: #D1D1FF;";
            case 4:
                return "background-color: #ADFFFF;";
            case 5:
                return "background-color: #C2FFEB;";
            case 6:
                return "background-color: #B9DBFF;";
            case 7:
                return "background-color: #C6FFC6;";
            case 8:
                return "background-color: #E4F0C5;";
            case 9:
                return "background-color: #FFEFD5;";
            case 10:
                return "background-color: #FFE9C8;";
            default:
                return "";
        }
    }
}